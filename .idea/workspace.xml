<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c61ac314-52bb-4762-befd-58c117cb4714" name="Changes" comment="Создайте такой подкласс класса PolyLine (также вместо него можно использовать Ломаную сделанную в более ранних задачах), который будет представлять собой замкнутую ломанную линию, то есть последовательность точек, начинающихся и заканчивающихся на одной и той же точке (см. рисунок 1). Данная сущность во всех отношениях совпадает с обычной Ломаной, кроме расчета длины (она, очевидно, длиннее). Учтите, что не следует просто копировать код метода length из PolyLine, вместо этого следует переиспользовать его.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/CurvedLine.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/CurvedLine.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/CurvedLineClosed.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/CurvedLineClosed.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/Line.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Line.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/Start.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Start.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="Полиморфизм_Замкнутая_ломаная" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2JVjI0QibQMR7qLsTn7vQvdKReM" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Git.Branch.Popup.ShowAllRemotes": "true",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "last_opened_file_path": "C:/Users/Ed/Java_hw",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.0",
    "settings.editor.selected.configurable": "configurable.group.language"
  }
}]]></component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c61ac314-52bb-4762-befd-58c117cb4714" name="Changes" comment="" />
      <created>1672170062255</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1672170062255</updated>
    </task>
    <task id="LOCAL-00001" summary="ломаная линия">
      <created>1672595956698</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1672595956698</updated>
    </task>
    <task id="LOCAL-00002" summary="ломаная линия">
      <created>1672606407512</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1672606407512</updated>
    </task>
    <task id="LOCAL-00003" summary="Создайте такой подкласс класса PolyLine (также вместо него можно использовать Ломаную сделанную в более ранних задачах), который будет представлять собой замкнутую ломанную линию, то есть последовательность точек, начинающихся и заканчивающихся на одной и той же точке (см. рисунок 1). Данная сущность во всех отношениях совпадает с обычной Ломаной, кроме расчета длины (она, очевидно, длиннее). Учтите, что не следует просто копировать код метода length из PolyLine, вместо этого следует переиспользовать его.">
      <created>1673816556347</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1673816556347</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="ломаная линия" />
    <MESSAGE value="Создайте такой подкласс класса PolyLine (также вместо него можно использовать Ломаную сделанную в более ранних задачах), который будет представлять собой замкнутую ломанную линию, то есть последовательность точек, начинающихся и заканчивающихся на одной и той же точке (см. рисунок 1). Данная сущность во всех отношениях совпадает с обычной Ломаной, кроме расчета длины (она, очевидно, длиннее). Учтите, что не следует просто копировать код метода length из PolyLine, вместо этого следует переиспользовать его." />
    <option name="LAST_COMMIT_MESSAGE" value="Создайте такой подкласс класса PolyLine (также вместо него можно использовать Ломаную сделанную в более ранних задачах), который будет представлять собой замкнутую ломанную линию, то есть последовательность точек, начинающихся и заканчивающихся на одной и той же точке (см. рисунок 1). Данная сущность во всех отношениях совпадает с обычной Ломаной, кроме расчета длины (она, очевидно, длиннее). Учтите, что не следует просто копировать код метода length из PolyLine, вместо этого следует переиспользовать его." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.lang.ArrayIndexOutOfBoundsException" package="java.lang" />
          <option name="timeStamp" value="1" />
        </breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>